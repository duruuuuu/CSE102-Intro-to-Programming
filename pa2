/*
    ABOUT EFFICIENCY
    Assume that n is the number of numbers in the input.txt
    - Each time it reads a number, the program iterates 100 times at most.
    - After reading the input file, the output is sorted. There is a nested loop
    in the sorting alogrithm, they both iterates 100 times.
    - If time complexity is considered in terms of efficiency, the program iterates
    n times where n is the number of numbers in the input file.
*/

#include <stdio.h>
#define MAX 100

void swap(int arr[], int x, int y);
void sortOutput(int countArr[], int numArr[], int index);

int main()
{
    FILE *input, *output;

    input = fopen("input.txt", "r");
    output = fopen("output.txt", "w");

    /* while loop to go through the file and store values and their count into arrays */
    int num, index = 0, numArr[MAX], countArr[MAX];
    while (fscanf(input, "%d", &num) != EOF)
    {
        /* for loop checks if there is already a previous array entry that is the same as the current number */
        int i, flag = 0;
        for (i = 0; i < index; i++)
        {
            if (numArr[i] == num)
            {
                flag = 1;
                break;
            }
        }

        /* if it is the first occurence of the current num, it increases the array
           index and adds the new number to the end of the array */
        if (flag == 0)
        {
            numArr[index] = num;
            countArr[index] = 1;
            index++;
        }

        /* if the current number is a duplicate, it adds one to the count array
           of the corresponding index of the first occurence of that number */
        else if (flag == 1)
            countArr[i]++;
    }

    /* sorting operations */
    sortOutput(countArr, numArr, index);

    /* Printing output to output file */
    for (int z = 0; z < index - 1; z++)
        fprintf(output, "%d:%d\n", numArr[z], countArr[z]);
    fprintf(output, "%d:%d", numArr[z], countArr[z]);

    fclose(input);
    fclose(output);
}

void swap(int arr[], int x, int y)
{
    int temp = arr[x];
    arr[x] = arr[y];
    arr[y] = temp;
}

void sortOutput(int countArr[], int numArr[], int index)
{
    for (int i = 0; i < index; i++)
    {
        for (int j = i + 1; j < index; j++)
        {
            /* sorting both arrays by count */
            if (countArr[i] > countArr[j])
            {
                swap(countArr, i, j);
                swap(numArr, i, j);
            }

            /* sorting numbers array by value if it has the same count */
            if (numArr[i] > numArr[j] && countArr[i] == countArr[j])
                swap(numArr, i, j);
        }
    }
}
